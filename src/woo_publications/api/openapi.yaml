openapi: 3.0.3
info:
  title: WOO Publications
  version: 0.1.0
  description: |2

    ## Documentatie

    De Woo-Publicatiebank API stelt client-applicaties in staat om publicaties van documenten te raadplegen en te beheren in het kader van een open overheid. Deze API-documentatie bevat drie logische 'domeinen'.

    ### Domeinen

    **Metadata**

    Publicaties en hun gerelateerde documenten moeten bepaalde metadata hebben. De metadata-endpoints stellen client-applicaties in staat om beschikbare metadata op te halen (en in sommige resources ook aan te maken of bij te werken).

    * [Organisaties](#tag/Organisaties): bekende overheidsorganisaties, zoals gemeentes, provincies...
    * [Informatiecategorieën](#tag/Informatiecategorieen): de voorgeschreven categorieën voor de [DiWoo](https://standaarden.overheid.nl/diwoo/metadata)-standaard, optioneel uitgebreid met organisatiespecifieke categorieën.
    * [Thema's](#tag/Themas): een boomstructuur van ouder/kind-thema's om verder te beschrijven waar publicaties over gaan.

    **Publicaties**

    * [Publicaties](#tag/Publicaties): een publicatie is een logische eenheid van informatie die openbaar gemaakt moet worden - die kan één of meerdere documenten bevatten. Metadata wordt typisch gekoppeld aan de publicatie in plaats van aan de documenten die erin zitten.
    * [Documenten](#tag/Documenten): de daadwerkelijke bestanden/documenten die openbaar worden gemaakt en geïndexeerd in zoekmachines.

    **Catalogi API**

    De [Catalogi API](#tag/Catalogi-API)-eindpunten zijn een implementatiedetail van hoe deze API werkt. Client-applicaties hoeven hier niets mee te doen.
    Ze zijn nodig om de Documenten API te kunnen hergebruiken voor de daadwerkelijke opslag van bestanden.

    ### Authenticatie

    **API-sleutel**

    De API-endpoints vereisen authenticatie waarvoor je een API-sleutel moet hebben. API-sleutels worden aangemaakt in de beheerinterface (zie de functionele documentatie).

    Wanneer je een API-sleutel hebt, dan moet je deze meesturen in elk verzoek in een request header:

    ```
    Authorization: Token mijn-voorbeeld-api-sleutel
    ```

    Vervang `mijn-voorbeeld-api-sleutel` door je eigen API-sleutel.

    **Audit-headers**

    Daarnaast vereisen de meeste endpoints dat er request headers worden meegestuurd voor de audit logs:

    ```
    Audit-User-ID: unieke-identificatie@example.com
    Audit-User-Representation: Alice B. Tables
    Audit-Remarks: Eigen publicaties ophalen
    ```
  contact:
    url: https://github.com/GeneriekPublicatiePlatformWoo/registratie-component
    email: support@maykinmedia.nl
  license:
    name: EUPL
    url: https://github.com/GeneriekPublicatiePlatformWoo/registratie-component/blob/main/LICENSE.md
paths:
  /api/v1/documenten:
    get:
      operationId: documentenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        documenten.
      summary: Alle beschikbare documenten.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
        description: Search the document based on the identifier field.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: publicatie
        schema:
          type: integer
        description: 'Filter documenten op basis van de unieke publicatie-identificatie
          (UUID) waartoe ze horen. **Opmerkingen**: negeer het gedocumenteerde type
          `integer`, het correcte type is `string` met formaat `uuid`.'
      - in: query
        name: publicatiestatus
        schema:
          type: string
          title: Status
          enum:
          - concept
          - gepubliceerd
          - ingetrokken
        description: |-
          Filter documents based on the publication status.

          * `gepubliceerd` - Published
          * `concept` - Concept
          * `ingetrokken` - Revoked
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -creatiedatum
            - -officiele_titel
            - -verkorte_titel
            - creatiedatum
            - officiele_titel
            - verkorte_titel
        description: |-
          Sorteren op.

          * `creatiedatum` - Creatiedatum
          * `-creatiedatum` - Creatiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documentenCreate
      description: |-
        Creating a document results in the registration of the metadata and prepares the client for the upload of the binary data.

        The document (metadata) is immediately registered in the underlying Documents API, and you receive an array of `bestandsdelen` in the response data to upload the actual binary data of the document.

        Note that the record in the underlying Documents API remains locked until all file parts have been provided.

        **NOTE**
        This requires the global configuration to be set up via the admin interface. You must:

        * configure and select the Documents API to use
        * specify the organisation RSIN for the created documents
      summary: Register a document's metadata.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documenten/{uuid}:
    get:
      operationId: documentenRetrieve
      description: Haal een specifiek document op.
      summary: Haal een specifiek document op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documentenUpdate
      description: Update the metadata of a specific document.
      summary: Update the metadata of a specific document.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpdate'
          description: ''
    patch:
      operationId: documentenPartialUpdate
      description: Update the metadata of a specific document partially.
      summary: Update the metadata of a specific document partially.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpdate'
          description: ''
  /api/v1/documenten/{uuid}/bestandsdelen/{partUuid}:
    put:
      operationId: documentenBestandsdelenUpdate
      description: |-
        Send the binary data for a file part to perform the actual file upload. The response data of the document create endpoints returns the list of expected file parts, pointing to this endpoint. The client must split the binary file in the expected part sizes and then upload each chunk individually.

        Once all file parts for the document are received, the document will be automatically unlocked in the Documents API and ready for use.

        **NOTE** this endpoint expects `multipart/form-data` rather than JSON to avoid the base64 encoding overhead.
      summary: Upload file part
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: partUuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FilePart'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatus'
          description: ''
  /api/v1/documenten/{uuid}/download:
    get:
      operationId: documentenDownloadRetrieve
      description: |-
        Download the binary content of the document. The endpoint does not return JSON data, but instead the file content is streamed.

        You can only download the content of files that are completely uploaded in the upstream API.
      summary: Download the binary file contents
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          headers:
            Content-Length:
              schema:
                type: string
              description: Total size in bytes of the download.
            Content-Disposition:
              schema:
                type: string
              description: Marks the file as attachment and includes the filename.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: The binary file contents.
        '502':
          headers:
            Content-Length:
              schema:
                type: string
              description: Total size in bytes of the download.
            Content-Disposition:
              schema:
                type: string
              description: Marks the file as attachment and includes the filename.
          description: Bad gateway - failure to stream content.
  /api/v1/informatiecategorieen:
    get:
      operationId: informatiecategorieenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        informatiecategorieën.
      summary: Alle beschikbare informatiecategorieën.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een informatiecategorie op basis van de unieke IRI die een
          specifieke categorie identificeert.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek informatiecategorieën op basis van de categorienaam.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInformationCategoryList'
          description: ''
  /api/v1/informatiecategorieen/{uuid}:
    get:
      operationId: informatiecategorieenRetrieve
      description: Haal een specifiieke informatiecategorie op.
      summary: Haal een specifiieke informatiecategorie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationCategory'
          description: ''
  /api/v1/organisaties:
    get:
      operationId: organisatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande organisaties.
      summary: Alle beschikbare organisaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een organisatie op basis van de unieke IRI die een specifieke
          organisatie identificeert.
      - in: query
        name: isActief
        schema:
          type: string
          enum:
          - alle
          - 'false'
          - 'true'
        description: |-
          Filter de organisaties op hun actief-status:

          * `true` - Haal alle actieve organisaties op (standaard).
          * `false` - Haal alle inactieve organisaties op.
          * `alle` - Haal alle organisaties op, ongeacht of ze actief zijn of niet.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek organisaties op basis van de organisatienaam. Je kan op
          delen van de naam zoeken, en het zoeken is niet hoofdlettergevoelig.
      - in: query
        name: oorsprong
        schema:
          type: string
          enum:
          - gemeentelijst
          - oorglijst
          - solijst
          - zelf_toegevoegd
        description: |-
          Zoek organisaties op basis van de oorsprong van de gegevens.

          * `gemeentelijst` - Register gemeenten compleet
          * `solijst` - Register samenwerkingsorganisaties compleet
          * `oorglijst` - Register overige overheidsorganisaties compleet
          * `zelf_toegevoegd` - Zelf-toegevoegd item
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationList'
          description: ''
    post:
      operationId: organisatiesCreate
      description: Maak een organisatie aan.
      summary: Maak een organisatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/organisaties/{uuid}:
    get:
      operationId: organisatiesRetrieve
      description: Haal een specifieke organisatie op.
      summary: Haal een specifieke organisatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    put:
      operationId: organisatiesUpdate
      description: Werk een organisatie (in zijn geheel) bij.
      summary: Werk een organisatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    patch:
      operationId: organisatiesPartialUpdate
      description: Werk een organisatie (gedeeltelijk) bij.
      summary: Werk een organisatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/publicaties:
    get:
      operationId: publicatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande publicaties.
      summary: Alle beschikbare publicaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: eigenaar
        schema:
          type: string
        description: Filter publicaties op basis van de identificatie van de eigenaar.
      - in: query
        name: informatieCategorieen
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: |-
          Filter publications that belong to a particular information category. When you specify multiple categories, publications belonging to any category are returned.

          Filter values should be the UUID of the categories.
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: publicatiestatus
        schema:
          type: string
          title: Status
          enum:
          - concept
          - gepubliceerd
          - ingetrokken
        description: |-
          Filter publications based on the publication status.

          * `gepubliceerd` - Published
          * `concept` - Concept
          * `ingetrokken` - Revoked
      - in: query
        name: registratiedatumTot
        schema:
          type: string
          format: date-time
        description: Filter publications that were registered before the given value.
      - in: query
        name: registratiedatumVanaf
        schema:
          type: string
          format: date-time
        description: Filter publications that were registered after or on the given
          value.
      - in: query
        name: search
        schema:
          type: string
        description: Searches publications based on the official and short title.
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -officiele_titel
            - -registratiedatum
            - -verkorte_titel
            - officiele_titel
            - registratiedatum
            - verkorte_titel
        description: |-
          Sorteren op.

          * `registratiedatum` - Registratiedatum
          * `-registratiedatum` - Registratiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
    post:
      operationId: publicatiesCreate
      description: Maak een publicatie aan.
      summary: Maak een publicatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/publicaties/{uuid}:
    get:
      operationId: publicatiesRetrieve
      description: Haal een specifieke publicatie op.
      summary: Haal een specifieke publicatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    put:
      operationId: publicatiesUpdate
      description: Werk een publicatie (in zijn geheel) bij.
      summary: Werk een publicatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    patch:
      operationId: publicatiesPartialUpdate
      description: Werk een publicatie (gedeeltelijk) bij.
      summary: Werk een publicatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    delete:
      operationId: publicatiesDestroy
      description: Vernietig een publicatie.
      summary: Vernietig een publicatie.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/themas:
    get:
      operationId: themasList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        thema's.
      summary: Alle beschikbare thema's.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemeList'
          description: ''
  /api/v1/themas/{uuid}:
    get:
      operationId: themasRetrieve
      description: Haal een specifiek thema op.
      summary: Haal een specifiek thema op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: ''
  /catalogi/api/v1/informatieobjecttypen/{uuid}:
    get:
      operationId: catalogiApiV1InformatieobjecttypenRetrieve
      description: |-
        Expose an information category as a Catalogi API `informatieobjecttype`.

        **NOTE**: this API endpoint is internal and used in the integration with the
        Documenten API. Publication components are not expected to interact with it.
      summary: Haal een documenttype op
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Catalogi API
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogiAPIDocumentType'
          description: ''
components:
  schemas:
    CatalogiAPIDocumentType:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        catalogus:
          type: string
          format: uri
          description: URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE
            behoort.
        beginGeldigheid:
          type: string
          format: date
          description: De datum waarop het is ontstaan.
        informatieobjectcategorie:
          type: string
          description: Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        omschrijving:
          type: string
          description: Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        vertrouwelijkheidaanduiding:
          allOf:
          - $ref: '#/components/schemas/VertrouwelijkheidaanduidingEnum'
          description: |-
            Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.

            * `openbaar` - Openbaar
            * `beperkt_openbaar` - Beperkt openbaar
            * `intern` - Intern
            * `zaakvertrouwelijk` - Zaakvertrouwelijk
            * `vertrouwelijk` - Vertrouwelijk
            * `confidentieel` - Confidentieel
            * `geheim` - Geheim
            * `zeer_geheim` - Zeer geheim
        concept:
          type: boolean
          readOnly: true
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
        besluittypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de BESLUITTYPEN
        zaaktypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de ZAAKTYPEN
      required:
      - beginGeldigheid
      - besluittypen
      - catalogus
      - concept
      - informatieobjectcategorie
      - omschrijving
      - url
      - vertrouwelijkheidaanduiding
      - zaaktypen
    Document:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          title: Identificatie
          description: De (primaire) unieke identificatie.
          maxLength: 255
        publicatie:
          type: string
          format: uuid
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Disclaimer**: you can't create a revoked document.

            * `gepubliceerd` - Published
            * `concept` - Concept
            * `ingetrokken` - Revoked
        creatiedatum:
          type: string
          format: date
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
          maxLength: 255
        bestandsnaam:
          type: string
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
          maxLength: 255
        bestandsomvang:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Bestandsgrootte op de harde schijf, in bytes.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: System timestamp reflecting when the document was registered
            in the database. Not to be confused with the creation date of the document,
            which is usually *before* the registration date.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the document was last modified
            in the database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          title: file parts
          description: The expected file parts/chunks to upload the file contents.
            These are derived from the specified total file size (`bestandsomvang`)
            in the document create body.
        documenthandelingen:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAction'
          description: The document actions of this document, currently only one action
            will be used per document.
      required:
      - bestandsdelen
      - creatiedatum
      - laatstGewijzigdDatum
      - officieleTitel
      - publicatie
      - registratiedatum
      - uuid
    DocumentAction:
      type: object
      properties:
        soortHandeling:
          allOf:
          - $ref: '#/components/schemas/SoortHandelingEnum'
          default: vaststelling
        atTime:
          type: string
          format: date-time
          readOnly: true
        wasAssciatedWith:
          type: string
          format: uuid
          readOnly: true
          description: The unique identifier of the organisation.
      required:
      - atTime
      - wasAssciatedWith
    DocumentStatus:
      type: object
      properties:
        documentUploadVoltooid:
          type: boolean
          title: document upload completed
          description: Indicates if all chunks of the file have been received and
            the document has been unlocked and made 'ready for use' in the upstream
            Documents API.
      required:
      - documentUploadVoltooid
    DocumentUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          readOnly: true
          title: Identificatie
          description: De (primaire) unieke identificatie.
        publicatie:
          type: string
          format: uuid
          readOnly: true
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
        creatiedatum:
          type: string
          format: date
          readOnly: true
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          readOnly: true
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
        bestandsnaam:
          type: string
          readOnly: true
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
        bestandsomvang:
          type: integer
          readOnly: true
          description: Bestandsgrootte op de harde schijf, in bytes.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: System timestamp reflecting when the document was registered
            in the database. Not to be confused with the creation date of the document,
            which is usually *before* the registration date.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the document was last modified
            in the database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          title: file parts
          description: The expected file parts/chunks to upload the file contents.
            These are derived from the specified total file size (`bestandsomvang`)
            in the document create body.
        documenthandelingen:
          allOf:
          - $ref: '#/components/schemas/DocumentAction'
          readOnly: true
          description: The document actions of this document, currently only one action
            will be used per document.
      required:
      - bestandsdelen
      - bestandsformaat
      - bestandsnaam
      - bestandsomvang
      - creatiedatum
      - documenthandelingen
      - identifier
      - laatstGewijzigdDatum
      - publicatie
      - registratiedatum
      - uuid
    Eigenaar:
      type: object
      properties:
        weergaveNaam:
          type: string
          readOnly: true
          description: De weergavenaam van de gebruiker, zoals vastgelegd in de auditlogs.
        identifier:
          type: string
          readOnly: true
          description: De (unieke) identificatie waarmee de gebruiker die de actie
            uitvoert achterhaald kan worden.
      required:
      - identifier
      - weergaveNaam
    FilePart:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
          description: The unique ID for a given file part for a document.
        url:
          type: string
          format: uri
          readOnly: true
          description: Endpoint where to submit the file part data to.
        volgnummer:
          type: integer
          readOnly: true
          title: order
          description: Index of the filepart, indicating which chunk is being uploaded.
        omvang:
          type: integer
          readOnly: true
          title: size
          description: Chunk size, in bytes. Large files must be cut up into chunks,
            where each chunk has an expected chunk size (configured on the Documents
            API server). A part is only considered complete once each chunk has binary
            data of exactly this size attached to it.
        inhoud:
          type: string
          writeOnly: true
          title: binary content
          description: The binary data of this chunk, which will be forwarded to the
            underlying Documents API. The file size must match the part's `omvang`.
      required:
      - inhoud
      - omvang
      - url
      - uuid
      - volgnummer
    InformationCategory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze categorie gedefinieerd is in de
            overheid.nl waardelijst. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          maxLength: 80
        naamMeervoud:
          type: string
          maxLength: 80
        definitie:
          type: string
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/InformationCategoryOorsprongEnum'
          description: |-
            Geeft aan waar de categorie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de categorie niet bewerkt of verwijderd worden.

            * `waardelijst` - Waardelijst
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        order:
          type: integer
          readOnly: true
          description: Heeft invloed op de (standaard-)sortering van categorieën in
            de resultaten.
      required:
      - identifier
      - naam
      - order
    InformationCategoryOorsprongEnum:
      enum:
      - waardelijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `waardelijst` - Waardelijst
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    Organisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
      required:
      - identifier
      - oorsprong
      - uuid
    OrganisationOorsprongEnum:
      enum:
      - gemeentelijst
      - solijst
      - oorglijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `gemeentelijst` - Register gemeenten compleet
        * `solijst` - Register samenwerkingsorganisaties compleet
        * `oorglijst` - Register overige overheidsorganisaties compleet
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedInformationCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InformationCategory'
    PaginatedOrganisationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
    PaginatedPublicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
    PaginatedThemeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
    PatchedDocumentUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          readOnly: true
          title: Identificatie
          description: De (primaire) unieke identificatie.
        publicatie:
          type: string
          format: uuid
          readOnly: true
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
        creatiedatum:
          type: string
          format: date
          readOnly: true
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          readOnly: true
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
        bestandsnaam:
          type: string
          readOnly: true
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
        bestandsomvang:
          type: integer
          readOnly: true
          description: Bestandsgrootte op de harde schijf, in bytes.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: System timestamp reflecting when the document was registered
            in the database. Not to be confused with the creation date of the document,
            which is usually *before* the registration date.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the document was last modified
            in the database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          title: file parts
          description: The expected file parts/chunks to upload the file contents.
            These are derived from the specified total file size (`bestandsomvang`)
            in the document create body.
        documenthandelingen:
          allOf:
          - $ref: '#/components/schemas/DocumentAction'
          readOnly: true
          description: The document actions of this document, currently only one action
            will be used per document.
    PatchedOrganisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
    PatchedPublication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: The information categories clarify the kind of information
            present in the publication.
        publisher:
          type: string
          format: uuid
          description: The organisation which publishes the publication.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: The organisation which is liable for the publication and its
            contents.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: The organisation which drafted the publication and its content.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          readOnly: true
          nullable: true
          description: De persoon die de publicatie aangemaakt heeft, afgeleid uit
            de auditlogs.
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Disclaimer**: you can't create a revoked publication.

            **Disclaimer**: when you revoke a publication, the attached published documents also get revoked.

            * `gepubliceerd` - Published
            * `concept` - Concept
            * `ingetrokken` - Revoked
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the publication was last modified
            in the database.
    PublicatiestatusEnum:
      enum:
      - gepubliceerd
      - concept
      - ingetrokken
      type: string
      description: |-
        * `gepubliceerd` - Published
        * `concept` - Concept
        * `ingetrokken` - Revoked
    Publication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: The information categories clarify the kind of information
            present in the publication.
        publisher:
          type: string
          format: uuid
          description: The organisation which publishes the publication.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: The organisation which is liable for the publication and its
            contents.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: The organisation which drafted the publication and its content.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          readOnly: true
          nullable: true
          description: De persoon die de publicatie aangemaakt heeft, afgeleid uit
            de auditlogs.
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Disclaimer**: you can't create a revoked publication.

            **Disclaimer**: when you revoke a publication, the attached published documents also get revoked.

            * `gepubliceerd` - Published
            * `concept` - Concept
            * `ingetrokken` - Revoked
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the publication was last modified
            in the database.
      required:
      - eigenaar
      - informatieCategorieen
      - laatstGewijzigdDatum
      - officieleTitel
      - publisher
      - registratiedatum
      - uuid
    SoortHandelingEnum:
      enum:
      - ondertekening
      - ontvangst
      - vaststelling
      type: string
      description: |-
        * `ondertekening` - Signed
        * `ontvangst` - Received
        * `vaststelling` - Declared
    Theme:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee het thema in de overheid.nl waardenlijst
            gedefinieerd is. Voor zelf-toegevoegde items wordt een identificatie gegenereerd.
        naam:
          type: string
          maxLength: 80
        subThemes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
          description: De subthema's die binnen het huidige thema bestaan.
      required:
      - identifier
      - naam
      - subThemes
    VertrouwelijkheidaanduidingEnum:
      enum:
      - openbaar
      - beperkt_openbaar
      - intern
      - zaakvertrouwelijk
      - vertrouwelijk
      - confidentieel
      - geheim
      - zeer_geheim
      type: string
      description: |-
        * `openbaar` - Openbaar
        * `beperkt_openbaar` - Beperkt openbaar
        * `intern` - Intern
        * `zaakvertrouwelijk` - Zaakvertrouwelijk
        * `vertrouwelijk` - Vertrouwelijk
        * `confidentieel` - Confidentieel
        * `geheim` - Geheim
        * `zeer_geheim` - Zeer geheim
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: Functional and technical documentation
  url: https://odrc.readthedocs.io/
