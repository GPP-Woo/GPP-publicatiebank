openapi: 3.0.3
info:
  title: WOO Publications
  version: 0.1.0
  description: WIP
  contact:
    url: https://github.com/GeneriekPublicatiePlatformWoo/registratie-component
    email: support@maykinmedia.nl
  license:
    name: EUPL
    url: https://github.com/GeneriekPublicatiePlatformWoo/registratie-component/blob/main/LICENSE.md
paths:
  /api/v1/documenten:
    get:
      operationId: documentenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        documenten.
      summary: Alle beschikbare documenten.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
        description: Search the document based on the identifier field.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: publicatie
        schema:
          type: integer
        description: 'Filter documenten op basis van de unieke publicatie-identificatie
          (UUID) waartoe ze horen. **Opmerkingen**: negeer het gedocumenteerde type
          `integer`, het correcte type is `string` met formaat `uuid`.'
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -creatiedatum
            - -officiele_titel
            - -verkorte_titel
            - creatiedatum
            - officiele_titel
            - verkorte_titel
        description: |-
          Sorteren op.

          * `creatiedatum` - Creatiedatum
          * `-creatiedatum` - Creatiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documentenCreate
      description: |-
        Creating a document results in the registration of the metadata and prepares the client for the upload of the binary data.

        The document (metadata) is immediately registered in the underlying Documents API, and you receive an array of `bestandsdelen` in the response data to upload the actual binary data of the document.

        Note that the record in the underlying Documents API remains locked until all file parts have been provided.

        **NOTE**
        This requires the global configuration to be set up via the admin interface. You must:

        * configure and select the Documents API to use
        * specify the organisation RSIN for the created documents
      summary: Register a document's metadata.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documenten/{uuid}:
    get:
      operationId: documentenRetrieve
      description: Haal een specifiek document op.
      summary: Haal een specifiek document op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/informatiecategorieen:
    get:
      operationId: informatiecategorieenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        informatiecategorieën.
      summary: Alle beschikbare informatiecategorieën.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een informatiecategorie op basis van de unieke IRI die een
          specifieke categorie identificeert.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek informatiecategorieën op basis van de categorienaam.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInformationCategoryList'
          description: ''
  /api/v1/informatiecategorieen/{uuid}:
    get:
      operationId: informatiecategorieenRetrieve
      description: Haal een specifiieke informatiecategorie op.
      summary: Haal een specifiieke informatiecategorie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationCategory'
          description: ''
  /api/v1/organisaties:
    get:
      operationId: organisatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande organisaties.
      summary: Alle beschikbare organisaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een organisatie op basis van de unieke IRI die een specifieke
          organisatie identificeert.
      - in: query
        name: isActief
        schema:
          type: string
          enum:
          - alle
          - 'false'
          - 'true'
        description: |-
          Filter de organisaties op hun actief-status:

          * `true` - Haal alle actieve organisaties op (standaard).
          * `false` - Haal alle inactieve organisaties op.
          * `alle` - Haal alle organisaties op, ongeacht of ze actief zijn of niet.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek organisaties op basis van de organisatienaam. Je kan op
          delen van de naam zoeken, en het zoeken is niet hoofdlettergevoelig.
      - in: query
        name: oorsprong
        schema:
          type: string
          enum:
          - gemeentelijst
          - oorglijst
          - solijst
          - zelf_toegevoegd
        description: |-
          Zoek organisaties op basis van de oorsprong van de gegevens.

          * `gemeentelijst` - Register gemeenten compleet
          * `solijst` - Register samenwerkingsorganisaties compleet
          * `oorglijst` - Register overige overheidsorganisaties compleet
          * `zelf_toegevoegd` - Zelf-toegevoegd item
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationList'
          description: ''
    post:
      operationId: organisatiesCreate
      description: Maak een organisatie aan.
      summary: Maak een organisatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/organisaties/{uuid}:
    get:
      operationId: organisatiesRetrieve
      description: Haal een specifieke organisatie op.
      summary: Haal een specifieke organisatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    put:
      operationId: organisatiesUpdate
      description: Werk een organisatie (in zijn geheel) bij.
      summary: Werk een organisatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    patch:
      operationId: organisatiesPartialUpdate
      description: Werk een organisatie (gedeeltelijk) bij.
      summary: Werk een organisatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/publicaties:
    get:
      operationId: publicatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande publicaties.
      summary: Alle beschikbare publicaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: eigenaar
        schema:
          type: string
        description: Filter publicaties op basis van de identificatie van de eigenaar.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -officiele_titel
            - -registratiedatum
            - -verkorte_titel
            - officiele_titel
            - registratiedatum
            - verkorte_titel
        description: |-
          Sorteren op.

          * `registratiedatum` - Registratiedatum
          * `-registratiedatum` - Registratiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
    post:
      operationId: publicatiesCreate
      description: Maak een publicatie aan.
      summary: Maak een publicatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/publicaties/{uuid}:
    get:
      operationId: publicatiesRetrieve
      description: Haal een specifieke publicatie op.
      summary: Haal een specifieke publicatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    put:
      operationId: publicatiesUpdate
      description: Werk een publicatie (in zijn geheel) bij.
      summary: Werk een publicatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    patch:
      operationId: publicatiesPartialUpdate
      description: Werk een publicatie (gedeeltelijk) bij.
      summary: Werk een publicatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    delete:
      operationId: publicatiesDestroy
      description: Vernietig een publicatie.
      summary: Vernietig een publicatie.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/themas:
    get:
      operationId: themasList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        thema's.
      summary: Alle beschikbare thema's.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemeList'
          description: ''
  /api/v1/themas/{uuid}:
    get:
      operationId: themasRetrieve
      description: Haal een specifiek thema op.
      summary: Haal een specifiek thema op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management infrastructure.
          With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: ''
  /catalogi/api/v1/informatieobjecttypen/{uuid}:
    get:
      operationId: catalogiApiV1InformatieobjecttypenRetrieve
      description: |-
        Expose an information category as a Catalogi API `informatieobjecttype`.

        **NOTE**: this API endpoint is internal and used in the integration with the
        Documenten API. Publication components are not expected to interact with it.
      summary: Haal een documenttype op
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Catalogi API
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogiAPIDocumentType'
          description: ''
components:
  schemas:
    CatalogiAPIDocumentType:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        catalogus:
          type: string
          format: uri
          description: URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE
            behoort.
        beginGeldigheid:
          type: string
          format: date
          description: De datum waarop het is ontstaan.
        informatieobjectcategorie:
          type: string
          description: Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        omschrijving:
          type: string
          description: Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        vertrouwelijkheidaanduiding:
          allOf:
          - $ref: '#/components/schemas/VertrouwelijkheidaanduidingEnum'
          description: |-
            Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.

            * `openbaar` - Openbaar
            * `beperkt_openbaar` - Beperkt openbaar
            * `intern` - Intern
            * `zaakvertrouwelijk` - Zaakvertrouwelijk
            * `vertrouwelijk` - Vertrouwelijk
            * `confidentieel` - Confidentieel
            * `geheim` - Geheim
            * `zeer_geheim` - Zeer geheim
        concept:
          type: boolean
          readOnly: true
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
        besluittypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de BESLUITTYPEN
        zaaktypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de ZAAKTYPEN
      required:
      - beginGeldigheid
      - besluittypen
      - catalogus
      - concept
      - informatieobjectcategorie
      - omschrijving
      - url
      - vertrouwelijkheidaanduiding
      - zaaktypen
    Document:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          title: Identificatie
          description: De (primaire) unieke identificatie.
          maxLength: 255
        publicatie:
          type: string
          format: uuid
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        creatiedatum:
          type: string
          format: date
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
          maxLength: 255
        bestandsnaam:
          type: string
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
          maxLength: 255
        bestandsomvang:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Bestandsgrootte op de harde schijf, in bytes.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: System timestamp reflecting when the document was registered
            in the database. Not to be confused with the creation date of the document,
            which is usually *before* the registration date.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the document was last modified
            in the database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          title: file parts
          description: The expected file parts/chunks to upload the file contents.
            These are derived from the specified total file size (`bestandsomvang`)
            in the document create body.
      required:
      - bestandsdelen
      - creatiedatum
      - identifier
      - laatstGewijzigdDatum
      - officieleTitel
      - publicatie
      - registratiedatum
      - uuid
    Eigenaar:
      type: object
      properties:
        weergaveNaam:
          type: string
          readOnly: true
          description: De weergavenaam van de gebruiker, zoals vastgelegd in de auditlogs.
        identifier:
          type: string
          readOnly: true
          description: De (unieke) identificatie waarmee de gebruiker die de actie
            uitvoert achterhaald kan worden.
      required:
      - identifier
      - weergaveNaam
    FilePart:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          description: The unique ID for a given file part for a document.
        order:
          type: integer
          description: Index of the filepart, indicating which chunk is being uploaded.
        size:
          type: integer
          description: Chunk size, in bytes. Large files must be cut up into chunks,
            where each chunk has an expected chunk size (configured on the Documents
            API server). A part is only considered complete once each chunk has binary
            data of exactly this size attached to it.
      required:
      - order
      - size
      - uuid
    InformationCategory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze categorie gedefinieerd is in de
            overheid.nl waardelijst. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          maxLength: 80
        naamMeervoud:
          type: string
          maxLength: 80
        definitie:
          type: string
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/InformationCategoryOorsprongEnum'
          description: |-
            Geeft aan waar de categorie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de categorie niet bewerkt of verwijderd worden.

            * `waardelijst` - Waardelijst
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        order:
          type: integer
          readOnly: true
          description: Heeft invloed op de (standaard-)sortering van categorieën in
            de resultaten.
      required:
      - identifier
      - naam
      - order
    InformationCategoryOorsprongEnum:
      enum:
      - waardelijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `waardelijst` - Waardelijst
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    Organisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
      required:
      - identifier
      - oorsprong
      - uuid
    OrganisationOorsprongEnum:
      enum:
      - gemeentelijst
      - solijst
      - oorglijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `gemeentelijst` - Register gemeenten compleet
        * `solijst` - Register samenwerkingsorganisaties compleet
        * `oorglijst` - Register overige overheidsorganisaties compleet
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedInformationCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InformationCategory'
    PaginatedOrganisationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
    PaginatedPublicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
    PaginatedThemeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
    PatchedOrganisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
    PatchedPublication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: The information categories clarify the kind of information
            present in the publication.
        publisher:
          type: string
          format: uuid
          description: The organisation which publishes the publication.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: The organisation which is liable for the publication and its
            contents.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: The organisation which drafted the publication and its content.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          readOnly: true
          nullable: true
          description: De persoon die de publicatie aangemaakt heeft, afgeleid uit
            de auditlogs.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the publication was last modified
            in the database.
    Publication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: The information categories clarify the kind of information
            present in the publication.
        publisher:
          type: string
          format: uuid
          description: The organisation which publishes the publication.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: The organisation which is liable for the publication and its
            contents.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: The organisation which drafted the publication and its content.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          readOnly: true
          nullable: true
          description: De persoon die de publicatie aangemaakt heeft, afgeleid uit
            de auditlogs.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: System timestamp reflecting when the publication was last modified
            in the database.
      required:
      - eigenaar
      - informatieCategorieen
      - laatstGewijzigdDatum
      - officieleTitel
      - publisher
      - registratiedatum
      - uuid
    Theme:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee het thema in de overheid.nl waardenlijst
            gedefinieerd is. Voor zelf-toegevoegde items wordt een identificatie gegenereerd.
        naam:
          type: string
          maxLength: 80
        subThemes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
          description: De subthema's die binnen het huidige thema bestaan.
      required:
      - identifier
      - naam
      - subThemes
    VertrouwelijkheidaanduidingEnum:
      enum:
      - openbaar
      - beperkt_openbaar
      - intern
      - zaakvertrouwelijk
      - vertrouwelijk
      - confidentieel
      - geheim
      - zeer_geheim
      type: string
      description: |-
        * `openbaar` - Openbaar
        * `beperkt_openbaar` - Beperkt openbaar
        * `intern` - Intern
        * `zaakvertrouwelijk` - Zaakvertrouwelijk
        * `vertrouwelijk` - Vertrouwelijk
        * `confidentieel` - Confidentieel
        * `geheim` - Geheim
        * `zeer_geheim` - Zeer geheim
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: Functional and technical documentation
  url: https://odrc.readthedocs.io/
