openapi: 3.0.3
info:
  title: WOO Publications
  version: 1.0.0
  description: |2

    ## Documentatie

    De Woo-Publicatiebank API stelt client-applicaties in staat om publicaties van documenten te raadplegen en te beheren in het kader van een open overheid. Deze API-documentatie bevat drie logische 'domeinen'.

    ### Domeinen

    **Metadata**

    Publicaties en hun gerelateerde documenten moeten bepaalde metadata hebben. De metadata-endpoints stellen client-applicaties in staat om beschikbare metadata op te halen (en in sommige resources ook aan te maken of bij te werken).

    * [Organisaties](#tag/Organisaties): bekende overheidsorganisaties, zoals gemeentes, provincies...
    * [Informatiecategorieën](#tag/Informatiecategorieen): de voorgeschreven categorieën voor de [DiWoo](https://standaarden.overheid.nl/diwoo/metadata)-standaard, optioneel uitgebreid met organisatiespecifieke categorieën.
    * [Thema's](#tag/Themas): een boomstructuur van ouder/kind-thema's om verder te beschrijven waar publicaties over gaan.

    **Publicaties**

    * [Publicaties](#tag/Publicaties): een publicatie is een logische eenheid van informatie die openbaar gemaakt moet worden - die kan één of meerdere documenten bevatten. Metadata wordt typisch gekoppeld aan de publicatie in plaats van aan de documenten die erin zitten.
    * [Documenten](#tag/Documenten): de daadwerkelijke bestanden/documenten die openbaar worden gemaakt en geïndexeerd in zoekmachines.

    **Catalogi API**

    De [Catalogi API](#tag/Catalogi-API)-eindpunten zijn een implementatiedetail van hoe deze API werkt. Client-applicaties hoeven hier niets mee te doen.
    Ze zijn nodig om de Documenten API te kunnen hergebruiken voor de daadwerkelijke opslag van bestanden.

    ### Authenticatie

    **API-sleutel**

    De API-endpoints vereisen authenticatie waarvoor je een API-sleutel moet hebben. API-sleutels worden aangemaakt in de beheerinterface (zie de functionele documentatie).

    Wanneer je een API-sleutel hebt, dan moet je deze meesturen in elk verzoek in een request header:

    ```
    Authorization: Token mijn-voorbeeld-api-sleutel
    ```

    Vervang `mijn-voorbeeld-api-sleutel` door je eigen API-sleutel.

    **Audit-headers**

    Daarnaast vereisen de meeste endpoints dat er request headers worden meegestuurd voor de audit logs:

    ```
    Audit-User-ID: unieke-identificatie@example.com
    Audit-User-Representation: Alice B. Tables
    Audit-Remarks: Eigen publicaties ophalen
    ```
  contact:
    url: https://github.com/GPP-Woo/GPP-publicatiebank
    email: support@maykinmedia.nl
  license:
    name: EUPL
    url: https://github.com/GPP-Woo/GPP-publicatiebank/blob/main/LICENSE.md
paths:
  /api/v1/documenten:
    get:
      operationId: documentenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        documenten.
      summary: Alle beschikbare documenten.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: creatiedatumTot
        schema:
          type: string
          format: date
        description: Filter documenten op creatiedatum voor de opgegeven datumtijd.
      - in: query
        name: creatiedatumTotEnMet
        schema:
          type: string
          format: date
        description: Filter documenten op creatiedatum op of voor de opgegeven datumtijd.
      - in: query
        name: creatiedatumVanaf
        schema:
          type: string
          format: date
        description: Filter documenten op creatiedatum op of na de opgegeven datumtijd.
      - in: query
        name: eigenaar
        schema:
          type: string
        description: Filter documenten op basis van de identificatie van de eigenaar.
      - in: query
        name: identifier
        schema:
          type: string
        description: Search the document based on the identifier field.
      - in: query
        name: informatieCategorieen
        schema:
          type: array
          items:
            type: string
        description: |-
          Filter documenten die binnen een bepaalde informatiecategorie vallen. Als je meerdere categorieën opgeeft, dan krijg je alle documenten die aan één van deze categorieën gerelateerd zijn.

          De filterwaarden zijn UUIDs van de categorieën. Gebruik komma's om meerdere waarden van elkaar te scheiden.
        explode: true
        style: form
      - in: query
        name: laatstGewijzigdDatumTot
        schema:
          type: string
          format: date-time
        description: Filter documenten op laastste wijzigingsdatum voor de opgegeven
          datumtijd.
      - in: query
        name: laatstGewijzigdDatumTotEnMet
        schema:
          type: string
          format: date-time
        description: Filter documenten op laastste wijzigingsdatum op of voor de opgegeven
          datumtijd.
      - in: query
        name: laatstGewijzigdDatumVanaf
        schema:
          type: string
          format: date-time
        description: Filter documenten op laastste wijzigingsdatum op of na de opgegeven
          datumtijd.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: publicatie
        schema:
          type: integer
        description: 'Filter documenten op basis van de unieke publicatie-identificatie
          (UUID) waartoe ze horen. **Opmerkingen**: negeer het gedocumenteerde type
          `integer`, het correcte type is `string` met formaat `uuid`.'
      - in: query
        name: publicatiestatus
        schema:
          type: array
          items:
            type: string
            title: Status
            enum:
            - concept
            - gepubliceerd
            - ingetrokken
        description: |-
          Filter documenten op publicatiestatus.

          * `gepubliceerd` - Gepubliceerd
          * `concept` - Concept
          * `ingetrokken` - Ingetrokken
        explode: true
        style: form
      - in: query
        name: registratiedatumTot
        schema:
          type: string
          format: date-time
        description: Filter documenten op registratiedatum voor de opgegeven datumtijd.
      - in: query
        name: registratiedatumTotEnMet
        schema:
          type: string
          format: date-time
        description: Filter documenten op registratiedatum op of voor de opgegeven
          datumtijd.
      - in: query
        name: registratiedatumVanaf
        schema:
          type: string
          format: date-time
        description: Filter documenten op registratiedatum op of na de opgegeven datumtijd.
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -creatiedatum
            - -officiele_titel
            - -verkorte_titel
            - creatiedatum
            - officiele_titel
            - verkorte_titel
        description: |-
          Sorteren op.

          * `creatiedatum` - Creatiedatum
          * `-creatiedatum` - Creatiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDocumentList'
          description: ''
    post:
      operationId: documentenCreate
      description: |-
        Het registreren van een document zorgt ervoor dat de metadata vastgelegd wordt en geeft informatie terug aan de client zodat de bestandsinhoud geüpload kan worden.

        Het document (= de metadata) wordt meteen vastgelegd in de achterliggende Documenten-API, en je krijgt een lijst van bestandsdelen terug in het antwoord waarmee je de eigenlijke bestandsinhoud kan uploaden.

        Merk op dat de record in de achterliggende Documenten-API vergrendeld is tot dat alle bestandsdelen toegevoegd zijn.

        **NOTE**
        Je moet hiervoor een aantal algemene instellingen doen in de beheeromgeving. Met name:

        * een Documenten-API-service instellen en selecteren
        * een organisatie-RSIN instellen om te gebruiken voor geregistreerde documenten
      summary: Registreer de metadata van een document.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
  /api/v1/documenten/{uuid}:
    get:
      operationId: documentenRetrieve
      description: Haal een specifiek document op.
      summary: Haal een specifiek document op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
    put:
      operationId: documentenUpdate
      description: Werk de metadata van een specifiek document bij.
      summary: Werk de metadata van een specifiek document bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpdate'
          description: ''
    patch:
      operationId: documentenPartialUpdate
      description: Werk de metadata van een specifiek document gedeeltelijk bij.
      summary: Werk de metadata van een specifiek document gedeeltelijk bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDocumentUpdate'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUpdate'
          description: ''
  /api/v1/documenten/{uuid}/bestandsdelen/{partUuid}:
    put:
      operationId: documentenBestandsdelenUpdate
      description: |-
        Upload de binaire data voor een bestandsdeel. De response van de document create endpoint geeft een lijst van verwachtte bestandsdelen terug die naar dit endpoint verwijzen. De client moet het bestand opknippen in de verwachtte bestandsdeelgroottes en dan elk stuk individueel uploaden.

        Eenmaal alle bestandsdelen voor het document ontvangen zijn, zal het document automatisch ontgrendeld worden in de achterliggende Documenten-API en dan is het document klaar voor gebruik.

        **NOTE** dit endpoint verwacht `multipart/form-data` gegevens in plaats van JSON - op deze manier kan de base64-encoding overhead voorkomen worden.
      summary: Bestandsdeel uploaden
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: partUuid
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FilePart'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentStatus'
          description: ''
  /api/v1/documenten/{uuid}/download:
    get:
      operationId: documentenDownloadRetrieve
      description: |-
        Download de inhoud van het document als binaire data. Dit endpoint geeft geen JSON terug, in de plaats daarvan wordt de bestandsinhoud direct gestreamed.

        Je kan enkel bestanden downloaden waarvan de upload naar de achterliggende Documenten-API voltooid is.
      summary: Download de binaire bestandsdata
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Documenten
      security:
      - tokenAuth: []
      responses:
        '200':
          headers:
            Content-Length:
              schema:
                type: string
              description: Totale grootte (in bytes) van de download.
            Content-Disposition:
              schema:
                type: string
              description: Markeert het bestand als 'bijlage' en bevat de bestandsnaam
                van het document.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
          description: De binaire bestandsinhoud.
        '502':
          headers:
            Content-Length:
              schema:
                type: string
              description: Totale grootte (in bytes) van de download.
            Content-Disposition:
              schema:
                type: string
              description: Markeert het bestand als 'bijlage' en bevat de bestandsnaam
                van het document.
          description: Bad gateway - kon de inhoud niet streamen.
  /api/v1/informatiecategorieen:
    get:
      operationId: informatiecategorieenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        informatiecategorieën.
      summary: Alle beschikbare informatiecategorieën.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een informatiecategorie op basis van de unieke IRI die een
          specifieke categorie identificeert.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek informatiecategorieën op basis van de categorienaam.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInformationCategoryList'
          description: ''
  /api/v1/informatiecategorieen/{uuid}:
    get:
      operationId: informatiecategorieenRetrieve
      description: Haal een specifiieke informatiecategorie op.
      summary: Haal een specifiieke informatiecategorie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Informatiecategorieën
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationCategory'
          description: ''
  /api/v1/onderwerpen:
    get:
      operationId: onderwerpenList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        onderwerpen.
      summary: Alle beschikbare onderwerpen.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: publicaties
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: |-
          Filter onderwerpen die bij een bepaald onderwerp horen. Als je meerdere publicaties opgeeft, dan krijg je alle onderwerpen die aan één van deze publicaties gerelateerd zijn.

          De filterwaarden zijn de UUIDs van de publicaties. Gebruik komma's om meerdere waarden van elkaar te scheiden.
        explode: true
        style: form
      - in: query
        name: publicatiestatus
        schema:
          type: array
          items:
            type: string
            title: Status
            enum:
            - concept
            - gepubliceerd
            - ingetrokken
        description: |-
          Filter onderwerpen op publicatiestatus.

          * `gepubliceerd` - Gepubliceerd
          * `concept` - Concept
          * `ingetrokken` - Ingetrokken
        explode: true
        style: form
      tags:
      - Onderwerpen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTopicList'
          description: ''
  /api/v1/onderwerpen/{uuid}:
    get:
      operationId: onderwerpenRetrieve
      description: Haal een specifiek onderwerp op.
      summary: Haal een specifiek onderwerp op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Onderwerpen
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Topic'
          description: ''
  /api/v1/organisaties:
    get:
      operationId: organisatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande organisaties.
      summary: Alle beschikbare organisaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: identifier
        schema:
          type: string
          format: uri
          title: Identificatie
        description: Zoek een organisatie op basis van de unieke IRI die een specifieke
          organisatie identificeert.
      - in: query
        name: isActief
        schema:
          type: string
          enum:
          - alle
          - 'false'
          - 'true'
        description: |-
          Filter de organisaties op hun actief-status:

          * `true` - Haal alle actieve organisaties op (standaard).
          * `false` - Haal alle inactieve organisaties op.
          * `alle` - Haal alle organisaties op, ongeacht of ze actief zijn of niet.
      - in: query
        name: naam
        schema:
          type: string
        description: Zoek organisaties op basis van de organisatienaam. Je kan op
          delen van de naam zoeken, en het zoeken is niet hoofdlettergevoelig.
      - in: query
        name: oorsprong
        schema:
          type: string
          enum:
          - gemeentelijst
          - oorglijst
          - solijst
          - zelf_toegevoegd
        description: |-
          Zoek organisaties op basis van de oorsprong van de gegevens.

          * `gemeentelijst` - Register gemeenten compleet
          * `solijst` - Register samenwerkingsorganisaties compleet
          * `oorglijst` - Register overige overheidsorganisaties compleet
          * `zelf_toegevoegd` - Zelf-toegevoegd item
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganisationList'
          description: ''
    post:
      operationId: organisatiesCreate
      description: Maak een organisatie aan.
      summary: Maak een organisatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/organisaties/{uuid}:
    get:
      operationId: organisatiesRetrieve
      description: Haal een specifieke organisatie op.
      summary: Haal een specifieke organisatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    put:
      operationId: organisatiesUpdate
      description: Werk een organisatie (in zijn geheel) bij.
      summary: Werk een organisatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
    patch:
      operationId: organisatiesPartialUpdate
      description: Werk een organisatie (gedeeltelijk) bij.
      summary: Werk een organisatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Organisaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganisation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organisation'
          description: ''
  /api/v1/publicaties:
    get:
      operationId: publicatiesList
      description: Geeft een lijst (met paginering) terug van alle bestaande publicaties.
      summary: Alle beschikbare publicaties.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: query
        name: archiefactiedatumTot
        schema:
          type: string
          format: date-time
        description: Filter publicaties op archiefactiedatum voor de opgegeven datumtijd.
      - in: query
        name: archiefactiedatumTotEnMet
        schema:
          type: string
          format: date-time
        description: Filter publicaties op archiefactiedatum op of voor de opgegeven
          datumtijd.
      - in: query
        name: archiefactiedatumVanaf
        schema:
          type: string
          format: date-time
        description: Filter publicaties op archiefactiedatum op of na de opgegeven
          datumtijd.
      - in: query
        name: archiefnominatie
        schema:
          type: array
          items:
            type: string
            enum:
            - blijvend_bewaren
            - vernietigen
        description: |-
          Filter publicaties op archiefnominatie.

          * `blijvend_bewaren` - Blijvend bewaren
          * `vernietigen` - Vernietigen
        explode: true
        style: form
      - in: query
        name: eigenaar
        schema:
          type: string
        description: Filter publicaties op basis van de identificatie van de eigenaar.
      - in: query
        name: informatieCategorieen
        schema:
          type: array
          items:
            type: string
        description: |-
          Filter publicaties die binnen een bepaalde informatiecategorie vallen. Als je meerdere categorieën opgeeft, dan krijg je alle publicaties die aan één van deze categorieën gerelateerd zijn.

          De filterwaarden zijn UUIDs van de categorieën. Gebruik komma's om meerdere waarden van elkaar te scheiden.
        explode: true
        style: form
      - in: query
        name: onderwerpen
        schema:
          type: array
          items:
            type: string
            format: uuid
        description: |-
          Filter publicaties die bij een bepaald onderwerp horen. Als je meerdere onderwerpen opgeeft, dan krijg je alle publicaties die aan één van deze onderwerpen gerelateerd zijn.

          De filterwaarden zijn de UUIDs van de onderwerpen. Gebruik komma's om meerdere waarden van elkaar te scheiden.
        explode: true
        style: form
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: publicatiestatus
        schema:
          type: array
          items:
            type: string
            title: Status
            enum:
            - concept
            - gepubliceerd
            - ingetrokken
        description: |-
          Filter publicaties op publicatiestatus.

          * `gepubliceerd` - Gepubliceerd
          * `concept` - Concept
          * `ingetrokken` - Ingetrokken
        explode: true
        style: form
      - in: query
        name: registratiedatumTot
        schema:
          type: string
          format: date-time
        description: Filter publicaties op registratiedatum voor de opgegeven datumtijd.
      - in: query
        name: registratiedatumTotEnMet
        schema:
          type: string
          format: date-time
        description: Filter publicaties op registratiedatum op of voor de opgegeven
          datumtijd.
      - in: query
        name: registratiedatumVanaf
        schema:
          type: string
          format: date-time
        description: Filter publicaties op registratiedatum op of na de opgegeven
          datumtijd.
      - in: query
        name: search
        schema:
          type: string
        description: Doorzoek publicaties op officiële en verkorte titel (niet hoofdlettergevoelig
          en zoekt op delen van de zoekterm).
      - in: query
        name: sorteer
        schema:
          type: array
          items:
            type: string
            enum:
            - -officiele_titel
            - -registratiedatum
            - -verkorte_titel
            - officiele_titel
            - registratiedatum
            - verkorte_titel
        description: |-
          Sorteren op.

          * `registratiedatum` - Registratiedatum
          * `-registratiedatum` - Registratiedatum (aflopend)
          * `officiele_titel` - Officiele titel
          * `-officiele_titel` - Officiele titel (aflopend)
          * `verkorte_titel` - Verkorte titel
          * `-verkorte_titel` - Verkorte titel (aflopend)
        explode: false
        style: form
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicationList'
          description: ''
    post:
      operationId: publicatiesCreate
      description: Maak een publicatie aan.
      summary: Maak een publicatie aan.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
  /api/v1/publicaties/{uuid}:
    get:
      operationId: publicatiesRetrieve
      description: Haal een specifieke publicatie op.
      summary: Haal een specifieke publicatie op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    put:
      operationId: publicatiesUpdate
      description: Werk een publicatie (in zijn geheel) bij.
      summary: Werk een publicatie (in zijn geheel) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    patch:
      operationId: publicatiesPartialUpdate
      description: Werk een publicatie (gedeeltelijk) bij.
      summary: Werk een publicatie (gedeeltelijk) bij.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPublication'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
          description: ''
    delete:
      operationId: publicatiesDestroy
      description: Vernietig een publicatie.
      summary: Vernietig een publicatie.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Publicaties
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/themas:
    get:
      operationId: themasList
      description: Geeft een resultatenlijst (met paginering) terug van de bestaande
        thema's.
      summary: Alle beschikbare thema's.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: pageSize
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemeList'
          description: ''
  /api/v1/themas/{uuid}:
    get:
      operationId: themasRetrieve
      description: Haal een specifiek thema op.
      summary: Haal een specifiek thema op.
      parameters:
      - in: header
        name: Audit-Remarks
        schema:
          type: string
        description: |2

          Any additional information describing the action performed by the user.
        required: true
      - in: header
        name: Audit-User-ID
        schema:
          type: string
        description: |2

          The system identifier that uniquely identifies the user performing the action.
          Ideally, this is obtained from some Identity and Access Management
          infrastructure. With OpenID Connect, this would typically be the `sub` claim.
        required: true
      - in: header
        name: Audit-User-Representation
        schema:
          type: string
        description: |2

          The display name of the user performing the action, to make them recognizable.
        required: true
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Themas
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: ''
  /catalogi/api/v1/informatieobjecttypen/{uuid}:
    get:
      operationId: catalogiApiV1InformatieobjecttypenRetrieve
      description: |-
        Expose an information category as a Catalogi API `informatieobjecttype`.

        **NOTE**: this API endpoint is internal and used in the integration with the
        Documenten API. Publication components are not expected to interact with it.
      summary: Haal een documenttype op
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - Catalogi API
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogiAPIDocumentType'
          description: ''
components:
  schemas:
    ArchiefnominatieEnum:
      enum:
      - blijvend_bewaren
      - vernietigen
      type: string
      description: |-
        **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).

        * `blijvend_bewaren` - Blijvend bewaren
        * `vernietigen` - Vernietigen
    BlankEnum:
      enum:
      - ''
    CatalogiAPIDocumentType:
      type: object
      properties:
        url:
          type: string
          format: uri
          readOnly: true
        catalogus:
          type: string
          format: uri
          description: URL-referentie naar de CATALOGUS waartoe dit INFORMATIEOBJECTTYPE
            behoort.
        beginGeldigheid:
          type: string
          format: date
          description: De datum waarop het is ontstaan.
        informatieobjectcategorie:
          type: string
          description: Typering van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        omschrijving:
          type: string
          description: Omschrijving van de aard van informatieobjecten van dit INFORMATIEOBJECTTYPE.
          maxLength: 80
        vertrouwelijkheidaanduiding:
          allOf:
          - $ref: '#/components/schemas/VertrouwelijkheidaanduidingEnum'
          description: |-
            Aanduiding van de mate waarin informatieobjecten van dit INFORMATIEOBJECTTYPE voor de openbaarheid bestemd zijn.

            * `openbaar` - Openbaar
            * `beperkt_openbaar` - Beperkt openbaar
            * `intern` - Intern
            * `zaakvertrouwelijk` - Zaakvertrouwelijk
            * `vertrouwelijk` - Vertrouwelijk
            * `confidentieel` - Confidentieel
            * `geheim` - Geheim
            * `zeer_geheim` - Zeer geheim
        concept:
          type: boolean
          readOnly: true
          description: Geeft aan of het object een concept betreft. Concepten zijn
            niet-definitieve versies en zouden niet gebruikt moeten worden buiten
            deze API.
        besluittypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de BESLUITTYPEN
        zaaktypen:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
          description: URL-referenties naar de ZAAKTYPEN
      required:
      - beginGeldigheid
      - besluittypen
      - catalogus
      - concept
      - informatieobjectcategorie
      - omschrijving
      - url
      - vertrouwelijkheidaanduiding
      - zaaktypen
    Document:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          title: Identificatie
          description: De (primaire) unieke identificatie.
          maxLength: 255
        publicatie:
          type: string
          format: uuid
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Waarschuwing**: je kan geen ingetrokken document aanmaken.

            * `gepubliceerd` - Gepubliceerd
            * `concept` - Concept
            * `ingetrokken` - Ingetrokken
        creatiedatum:
          type: string
          format: date
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
          maxLength: 255
        bestandsnaam:
          type: string
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
          maxLength: 255
        bestandsomvang:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          description: Bestandsgrootte op de harde schijf, in bytes.
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          nullable: true
          description: The creator of the document.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer het document in de databank opgeslagen
            is. Niet te verwarren met de creatiedatum van de publicatie, die typisch
            *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer het document laatst gewijzigd
            is in de database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          description: De verwachte bestandsdelen/chunks om de bestandsinhoud te uploaden.
            Deze zijn afgeleid uit de opgegeven totale bestandsgrootte (`bestandsomvang`)
            in de body van de document create operatie.
        documenthandelingen:
          type: array
          items:
            $ref: '#/components/schemas/DocumentAction'
          description: De documenthandelingen voor dit document. Op dit moment kan
            je slechts één handeling opgeven. Als je dit niet opgeeft, dan worden
            standaardwaarden gebruikt.
      required:
      - bestandsdelen
      - creatiedatum
      - laatstGewijzigdDatum
      - officieleTitel
      - publicatie
      - registratiedatum
      - uuid
    DocumentAction:
      type: object
      properties:
        soortHandeling:
          allOf:
          - $ref: '#/components/schemas/SoortHandelingEnum'
          default: vaststelling
        identifier:
          type: string
          format: uri
          readOnly: true
        atTime:
          type: string
          format: date-time
          readOnly: true
        wasAssciatedWith:
          type: string
          format: uuid
          readOnly: true
          description: De unieke identificatie van de organisatie.
      required:
      - atTime
      - identifier
      - wasAssciatedWith
    DocumentStatus:
      type: object
      properties:
        documentUploadVoltooid:
          type: boolean
          title: documentupload voltooid
          description: Geeft aan of alle bestandsdelen van het bestand ontvangen zijn
            en het document ontgrendeld en klaar voor gebruik is in de achterliggende
            Documenten-API.
      required:
      - documentUploadVoltooid
    DocumentUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          readOnly: true
          title: Identificatie
          description: De (primaire) unieke identificatie.
        publicatie:
          type: string
          format: uuid
          readOnly: true
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
        creatiedatum:
          type: string
          format: date
          readOnly: true
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          readOnly: true
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
        bestandsnaam:
          type: string
          readOnly: true
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
        bestandsomvang:
          type: integer
          readOnly: true
          description: Bestandsgrootte op de harde schijf, in bytes.
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          nullable: true
          description: The creator of the document.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer het document in de databank opgeslagen
            is. Niet te verwarren met de creatiedatum van de publicatie, die typisch
            *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer het document laatst gewijzigd
            is in de database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          description: De verwachte bestandsdelen/chunks om de bestandsinhoud te uploaden.
            Deze zijn afgeleid uit de opgegeven totale bestandsgrootte (`bestandsomvang`)
            in de body van de document create operatie.
        documenthandelingen:
          allOf:
          - $ref: '#/components/schemas/DocumentAction'
          readOnly: true
          description: De documenthandelingen voor dit document. Op dit moment kan
            je slechts één handeling opgeven. Als je dit niet opgeeft, dan worden
            standaardwaarden gebruikt.
      required:
      - bestandsdelen
      - bestandsformaat
      - bestandsnaam
      - bestandsomvang
      - creatiedatum
      - documenthandelingen
      - identifier
      - laatstGewijzigdDatum
      - publicatie
      - registratiedatum
      - uuid
    Eigenaar:
      type: object
      properties:
        identifier:
          type: string
          description: De (unieke) identificatie waarmee de gebruiker die de actie
            uitvoert achterhaald kan worden.
        weergaveNaam:
          type: string
          description: De weergavenaam van de gebruiker, zoals vastgelegd in de auditlogs.
      required:
      - identifier
      - weergaveNaam
    FilePart:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
          description: Het unieke ID van een bestandsdeel horend bij een document.
        url:
          type: string
          format: uri
          readOnly: true
          description: Endpoint waar het bestandsdeel geüpload moet worden.
        volgnummer:
          type: integer
          readOnly: true
          title: volgorde
          description: Index van het bestandsdeel, geeft aan welk bestandsdeel precies
            geüpload wordt.
        omvang:
          type: integer
          readOnly: true
          title: grootte
          description: Bestandsdeelomvang, in bytes. Grote bestanden moeten in meerdere
            stukken gesplitst worden, waarbij voor elk stuk een bepaalde bestandsgrootte
            verwacht wordt (deze grootte is ingesteld op de Documenten-API-server).
            Een bestandsdeel is pas voltooid als er binaire data van precies deze
            omvang geüpload zijn.
        inhoud:
          type: string
          writeOnly: true
          title: binaire data
          description: De binaire data van dit stuk, dit wordt doorgezet naar de achterliggende
            Documenten-API. De bestandsgrootte moet overeenkomen met de `omvang` van
            het bestandsdeel.
      required:
      - inhoud
      - omvang
      - url
      - uuid
      - volgnummer
    InformationCategory:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze categorie gedefinieerd is in de
            overheid.nl waardelijst. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          maxLength: 80
        naamMeervoud:
          type: string
          maxLength: 80
        definitie:
          type: string
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/InformationCategoryOorsprongEnum'
          description: |-
            Geeft aan waar de categorie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de categorie niet bewerkt of verwijderd worden.

            * `waardelijst` - Waardelijst
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        order:
          type: integer
          readOnly: true
          title: Volgorde
          description: Heeft invloed op de (standaard-)sortering van categorieën in
            de resultaten.
      required:
      - identifier
      - naam
      - order
    InformationCategoryOorsprongEnum:
      enum:
      - waardelijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `waardelijst` - Waardelijst
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    Organisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
      required:
      - identifier
      - oorsprong
      - uuid
    OrganisationOorsprongEnum:
      enum:
      - gemeentelijst
      - solijst
      - oorglijst
      - zelf_toegevoegd
      type: string
      description: |-
        * `gemeentelijst` - Register gemeenten compleet
        * `solijst` - Register samenwerkingsorganisaties compleet
        * `oorglijst` - Register overige overheidsorganisaties compleet
        * `zelf_toegevoegd` - Zelf-toegevoegd item
    PaginatedDocumentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    PaginatedInformationCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/InformationCategory'
    PaginatedOrganisationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organisation'
    PaginatedPublicationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
    PaginatedThemeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
    PaginatedTopicList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Topic'
    PatchedDocumentUpdate:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          readOnly: true
          title: Identificatie
          description: De (primaire) unieke identificatie.
        publicatie:
          type: string
          format: uuid
          readOnly: true
          description: De unieke identificatie van de publicatie.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
        creatiedatum:
          type: string
          format: date
          readOnly: true
          description: De datum waarop het document ontstaan is. Niet te verwarren
            met de registratiedatum - de creatiedatum valt typisch *voor* de registratiedatum.
        bestandsformaat:
          type: string
          readOnly: true
          description: TODO - placeholder accepting anything, in the future this will
            be validated against a reference value list.
        bestandsnaam:
          type: string
          readOnly: true
          description: Bestandsnaam 'op de harde schijf' van het document, bijvoorbeeld
            'gelakt-verslag.pdf'.
        bestandsomvang:
          type: integer
          readOnly: true
          description: Bestandsgrootte op de harde schijf, in bytes.
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          nullable: true
          description: The creator of the document.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer het document in de databank opgeslagen
            is. Niet te verwarren met de creatiedatum van de publicatie, die typisch
            *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer het document laatst gewijzigd
            is in de database.
        bestandsdelen:
          type: array
          items:
            $ref: '#/components/schemas/FilePart'
          readOnly: true
          nullable: true
          description: De verwachte bestandsdelen/chunks om de bestandsinhoud te uploaden.
            Deze zijn afgeleid uit de opgegeven totale bestandsgrootte (`bestandsomvang`)
            in de body van de document create operatie.
        documenthandelingen:
          allOf:
          - $ref: '#/components/schemas/DocumentAction'
          readOnly: true
          description: De documenthandelingen voor dit document. Op dit moment kan
            je slechts één handeling opgeven. Als je dit niet opgeeft, dan worden
            standaardwaarden gebruikt.
    PatchedOrganisation:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee deze organisatie gedefinieerd is in de
            overheid.nl waardelijsten. Voor zelf-toegevoegde items wordt een identificatie
            gegenereerd.
        naam:
          type: string
          description: De naam van de organisatie (deze kan enkel gewijzigd worden
            als de `oorsprong` `zelf_toegevoegd` is).
          maxLength: 255
        oorsprong:
          allOf:
          - $ref: '#/components/schemas/OrganisationOorsprongEnum'
          readOnly: true
          description: |-
            Geeft aan waar de organisatie gedefinieerd is, waar de gegevens opgehaald worden en hoe de identificatie dient geïnterpreteerd te worden. Als een waardelijst als oorsprong gebruikt wordt, dan kan de organisatie niet bewerkt of verwijderd worden.

            * `gemeentelijst` - Register gemeenten compleet
            * `solijst` - Register samenwerkingsorganisaties compleet
            * `oorglijst` - Register overige overheidsorganisaties compleet
            * `zelf_toegevoegd` - Zelf-toegevoegd item
        isActief:
          type: boolean
          title: Actief
          description: Geeft de actief-status van de organisatie aan.
    PatchedPublication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: De informatiecategorie verduidelijkt de soort informatie die
            in de publicatie voorkomt.
        diWooInformatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
          description: De informatiecategorieën voor in de sitemap.
        onderwerpen:
          type: array
          items:
            type: string
            format: uuid
          description: Onderwerpen gaan over maatschappelijk relevante informatie
            die meerdere publicaties omvatten. Ze kunnen tientallen jaren relevant
            blijven en overstijgen de typische levensduur van een enkele publicatie.
        publisher:
          type: string
          format: uuid
          description: De organisatie die de publicatie publiceert.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: De organisatie die verantwoordelijk is voor de publicatie en
            haar inhoud.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: De organisatie die de publicatie en haar inhoud opgesteld heeft.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          nullable: true
          description: The creator of the publication.
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.

            **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.

            * `gepubliceerd` - Gepubliceerd
            * `concept` - Concept
            * `ingetrokken` - Ingetrokken
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer de publicatie laatst gewijzigd
            is in de database.
        bronBewaartermijn:
          type: string
          description: |-
            De bron waaruit de bewaartermijn bepaald is (bjivoorbeeld: Selectielijst gemeenten 2020).

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
          maxLength: 255
        selectiecategorie:
          type: string
          description: |-
            De categorie waaruit de bewaartermijn bepaald is, zoals deze in de bron bewaartermijn voorkomt (bijvoorbeeld: 20.1.2).

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
          maxLength: 255
        archiefnominatie:
          description: |-
            Geeft aan of de gegevens bij het archiveren bewaard blijven of definitief vernietigd worden.

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).

            * `blijvend_bewaren` - Blijvend bewaren
            * `vernietigen` - Vernietigen
          oneOf:
          - $ref: '#/components/schemas/ArchiefnominatieEnum'
          - $ref: '#/components/schemas/BlankEnum'
        archiefactiedatum:
          type: string
          format: date
          nullable: true
          description: |-
            Datum waarop de publicatie overgebracht of definitief vernietigd zal worden.

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
        toelichtingBewaartermijn:
          type: string
          description: '**Opmerking** handmatige opgegeven waarden wordt bij het aanmaken
            (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met
            de automatisch afgeleide waarden uit de gekoppelde informatiecategorie(ën).'
    PublicatiestatusEnum:
      enum:
      - gepubliceerd
      - concept
      - ingetrokken
      type: string
      description: |-
        * `gepubliceerd` - Gepubliceerd
        * `concept` - Concept
        * `ingetrokken` - Ingetrokken
    Publication:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        informatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          description: De informatiecategorie verduidelijkt de soort informatie die
            in de publicatie voorkomt.
        diWooInformatieCategorieen:
          type: array
          items:
            type: string
            format: uuid
          readOnly: true
          description: De informatiecategorieën voor in de sitemap.
        onderwerpen:
          type: array
          items:
            type: string
            format: uuid
          description: Onderwerpen gaan over maatschappelijk relevante informatie
            die meerdere publicaties omvatten. Ze kunnen tientallen jaren relevant
            blijven en overstijgen de typische levensduur van een enkele publicatie.
        publisher:
          type: string
          format: uuid
          description: De organisatie die de publicatie publiceert.
        verantwoordelijke:
          type: string
          format: uuid
          nullable: true
          description: De organisatie die verantwoordelijk is voor de publicatie en
            haar inhoud.
        opsteller:
          type: string
          format: uuid
          nullable: true
          description: De organisatie die de publicatie en haar inhoud opgesteld heeft.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        verkorteTitel:
          type: string
          maxLength: 255
        omschrijving:
          type: string
        eigenaar:
          allOf:
          - $ref: '#/components/schemas/Eigenaar'
          nullable: true
          description: The creator of the publication.
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
          description: |2-

            **Waarschuwing**: je kan geen ingetrokken publicatie aanmaken.

            **Waarschuwing**: wanneer je een publicatie intrekt, dan worden ook de gerelateerde gepubliceerde documenten ingetrokken.

            * `gepubliceerd` - Gepubliceerd
            * `concept` - Concept
            * `ingetrokken` - Ingetrokken
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer de publicatie in de databank
            opgeslagen is. Niet te verwarren met de creatiedatum van de publicatie,
            die typisch *voor* de registratiedatum valt.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer de publicatie laatst gewijzigd
            is in de database.
        bronBewaartermijn:
          type: string
          description: |-
            De bron waaruit de bewaartermijn bepaald is (bjivoorbeeld: Selectielijst gemeenten 2020).

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
          maxLength: 255
        selectiecategorie:
          type: string
          description: |-
            De categorie waaruit de bewaartermijn bepaald is, zoals deze in de bron bewaartermijn voorkomt (bijvoorbeeld: 20.1.2).

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
          maxLength: 255
        archiefnominatie:
          description: |-
            Geeft aan of de gegevens bij het archiveren bewaard blijven of definitief vernietigd worden.

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).

            * `blijvend_bewaren` - Blijvend bewaren
            * `vernietigen` - Vernietigen
          oneOf:
          - $ref: '#/components/schemas/ArchiefnominatieEnum'
          - $ref: '#/components/schemas/BlankEnum'
        archiefactiedatum:
          type: string
          format: date
          nullable: true
          description: |-
            Datum waarop de publicatie overgebracht of definitief vernietigd zal worden.

            **Opmerking** een handmatige opgegeven waarde wordt bij het aanmaken (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met de automatisch afgeleide waarde uit de gekoppelde informatiecategorie(ën).
        toelichtingBewaartermijn:
          type: string
          description: '**Opmerking** handmatige opgegeven waarden wordt bij het aanmaken
            (of wanneer de informatiecategorieën bijgewerkt worden) overschreven met
            de automatisch afgeleide waarden uit de gekoppelde informatiecategorie(ën).'
      required:
      - diWooInformatieCategorieen
      - informatieCategorieen
      - laatstGewijzigdDatum
      - officieleTitel
      - publisher
      - registratiedatum
      - uuid
    SoortHandelingEnum:
      enum:
      - ondertekening
      - ontvangst
      - vaststelling
      type: string
      description: |-
        * `ondertekening` - Ondertekend
        * `ontvangst` - Ontvangen
        * `vaststelling` - Vastgesteld
    Theme:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        identifier:
          type: string
          format: uri
          readOnly: true
          title: Identificatie
          description: De unieke IRI waarmee het thema in de overheid.nl waardenlijst
            gedefinieerd is. Voor zelf-toegevoegde items wordt een identificatie gegenereerd.
        naam:
          type: string
          maxLength: 80
        subThemes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
          description: De subthema's die binnen het huidige thema bestaan.
      required:
      - identifier
      - naam
      - subThemes
    Topic:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        afbeelding:
          type: string
          format: uri
          pattern: (?:jpg|jpeg|png|gif|webp)$
        publicaties:
          type: array
          items:
            type: string
            format: uuid
          description: De publicatie die aan dit onderwerp gekoppeld is.
        officieleTitel:
          type: string
          title: Officiële titel
          maxLength: 255
        omschrijving:
          type: string
        publicatiestatus:
          allOf:
          - $ref: '#/components/schemas/PublicatiestatusEnum'
          title: Status
        promoot:
          type: boolean
          description: Vlag die aangeeft of dit onderwerp gepromoot wordt in het burgerportaal.
        registratiedatum:
          type: string
          format: date-time
          readOnly: true
          title: Geregistreerd op
          description: Systeemdatum en -tijd wanneer het onderwerp geregistreerd is
            in de database.
        laatstGewijzigdDatum:
          type: string
          format: date-time
          readOnly: true
          title: Laatst gewijzigd op
          description: Systeemdatum en -tijd wanneer het onderwerp laatst gewijzigd
            is in de database.
      required:
      - afbeelding
      - laatstGewijzigdDatum
      - officieleTitel
      - publicaties
      - registratiedatum
      - uuid
    VertrouwelijkheidaanduidingEnum:
      enum:
      - openbaar
      - beperkt_openbaar
      - intern
      - zaakvertrouwelijk
      - vertrouwelijk
      - confidentieel
      - geheim
      - zeer_geheim
      type: string
      description: |-
        * `openbaar` - Openbaar
        * `beperkt_openbaar` - Beperkt openbaar
        * `intern` - Intern
        * `zaakvertrouwelijk` - Zaakvertrouwelijk
        * `vertrouwelijk` - Vertrouwelijk
        * `confidentieel` - Confidentieel
        * `geheim` - Geheim
        * `zeer_geheim` - Zeer geheim
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
externalDocs:
  description: Functional and technical documentation
  url: https://gpp-publicatiebank.readthedocs.io/
