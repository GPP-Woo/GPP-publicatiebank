# Generated by Django 4.2.16 on 2024-11-07 10:39

from django.db import migrations, models
from django.db.migrations.state import StateApps
import django.db.models.deletion


# The publisher field is a required fk field linked to the organisations model.
# This means that for the migration to succeed we need to add a temporary default value.
# Because of this we have made the temporary value 1, which translates to the organisation object with an id of 1.
# If the database is empty or filled with organisations then this will go fine.
# But in the scenario where we have existing publications but no organisations the migration will crash.
# Because of this we created this function to fix this issue for us.
# In the situation where we do have publications but no organisations this function creates a organisation to link the publications to.
def create_organisation_if_none_exist(apps: StateApps, _):
    Organisation = apps.get_model("metadata", "organisation")
    Publication = apps.get_model("publications", "publication")

    if Publication.objects.exists():
        if not Organisation.objects.exists():
            Organisation.objects.create(
                naam="DELETE ME",
                oorsprong="zelf_toegevoegd",
                is_actief=True,
            )


class Migration(migrations.Migration):

    dependencies = [
        ("metadata", "0007_alter_organisation_is_actief"),
        ("publications", "0007_document_laatst_geweizigd_datum_and_more"),
    ]

    operations = [
        migrations.AddField(
            model_name="publication",
            name="opsteller",
            field=models.ForeignKey(
                blank=True,
                help_text="The organisation which drafted the publication and its content.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="drafted_publications",
                to="metadata.organisation",
                verbose_name="drafter",
            ),
        ),
        migrations.RunPython(
            create_organisation_if_none_exist, migrations.RunPython.noop
        ),
        migrations.AddField(
            model_name="publication",
            name="publisher",
            field=models.ForeignKey(
                default=1,
                help_text="The organisation which publishes the publication.",
                limit_choices_to={"is_actief": True},
                on_delete=django.db.models.deletion.CASCADE,
                related_name="published_publications",
                to="metadata.organisation",
                verbose_name="publisher",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="publication",
            name="verantwoordelijke",
            field=models.ForeignKey(
                blank=True,
                help_text="The organisation which is liable for the publication and its contents.",
                limit_choices_to={"is_actief": True},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="liable_for_publications",
                to="metadata.organisation",
                verbose_name="liable organisation",
            ),
        ),
    ]
